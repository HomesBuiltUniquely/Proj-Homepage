<div className="flex justify-evenly mt-5">
            <div className="flex justify-evenly mr-30">
                <h1 className="text-5xl font-bold text-red-400 ">HUB</h1>
                <div className="flex mt-2 ml-15">
                <div className="pr-6 mt-1.5 text-[17px] text-amber-800 font-bold">Service</div>
                <div className="pr-6 mt-1.5 text-[17px] text-amber-800 font-bold">Design Gallery</div>
                <div className="pr-6 mt-1.5 text-[17px] text-amber-800 font-bold">Design Ideas</div>
                <div className="mt-1.5 text-[17px] text-amber-800 font-bold">More<span className="text-xm text-amber-800 font-bold pl-1 mt-4">▼</span></div>
                </div>
                </div>
            < div className="w-[200px] h-[40px] bg-amber-800 text-white font-bold text-center pt-2 rounded-xl mt-2">Get Free Estimate</div>
</div>






export function NavBar(){
    return (
        <div className=" w-full h-[300px] " style={{backgroundColor: '#F1F2F6'}}>
            <nav className="w-full py-7" style={{backgroundColor: '#F1F2F6'}}>
                <div className="max-w-7xl mx-auto flex justify-between items-center">
                <img src="hub.png" className="w-[150px] h-[60px] mb-8"></img>
                    <div className="flex ">
                    <ul className="flex space-x-6 text-amber-950 mt-2">
                    <li><a href="/" className="hover:text-blue-500 font-medium ">Home</a></li>
                    <li><a href="/Services" className="hover:text-blue-500 font-medium">Services</a></li>
                    <li><a href="/Interior Design" className="hover:text-blue-500 font-medium">Interior Design</a></li>
                    <li><a href="/Explore Rooms" className="hover:text-blue-500 font-medium mr-8">Explore Rooms</a></li>                    </ul>
                    <div className="text-amber-950 w-[200px] h-[40px] font-medium text-center pt-2 mb-8 rounded-4xl " style={{backgroundColor: '#DDCDC1'}}>Get Free Estimate</div>
                    </div>
                </div>
            </nav>
        </div>

    )
}







'use client';
import { useEffect, useState } from "react";

export function NavBar() {
  const [scrolled, setScrolled] = useState(false);

  useEffect(() => {
    const onScroll = () => setScrolled(window.scrollY > 30);
    window.addEventListener("scroll", onScroll);
    return () => window.removeEventListener("scroll", onScroll);
  }, []);

  return (
    <div
      className={`fixed top-0 w-full z-50 transition-all duration-300 ${
        scrolled ? 'bg-transparent' : 'bg-[#F1F2F6]'
      }`}
    >
      <nav className="w-full h-[200px]  transition-all duration-300 py-4">
        <div
          className={`max-w-7xl mx-auto flex items-center transition-all duration-300 ${
            scrolled ? 'justify-center' : 'justify-between'
          }`}
        >
          {/* Logo */}
          <img
            src="/hub.png"
            alt="Logo"
            className={`transition-all duration-300 ${
              scrolled ? 'w-[85px] h-[40px]' : 'w-[150px] h-[60px] mb-6'
            }`}
          />

          {/* Navigation */}
          <div
            className={`flex items-center space-x-6 text-amber-950 transition-all duration-300 ${
              scrolled ? 'ml-8 mt-4' : '' 
            }`}
          >
            <ul className="flex space-x-6 text-amber-950 pb-3">
              <li><a href="/" className="hover:text-blue-500 font-bold">Home</a></li>
              <li><a href="/Services" className="hover:text-blue-500 font-bold">Services</a></li>
              <li><a href="/Explore Rooms" className="hover:text-blue-500 font-bold mr-8">Explore Rooms</a></li>
            </ul>
            <div className="text-amber-950 w-[200px] h-[40px] font-medium text-center pt-2 rounded-4xl mb-3 bg-[#DDCDC1]">
              Get Free Estimate
            </div>
          </div>
        </div>
      </nav>
    </div>
  );
}



//Updated



'use client';
import { useEffect, useState } from "react";

export function NavBar() {
  const [scrolled, setScrolled] = useState(false);

  useEffect(() => {
    const onScroll = () => setScrolled(window.scrollY > 30);
    window.addEventListener("scroll", onScroll);
    return () => window.removeEventListener("scroll", onScroll);
  }, []);

  return (
    <div
      className={`fixed top-0 w-full z-50 transition-all duration-300 ${
        scrolled ? 'bg-transparent' : 'bg-[#F1F2F6]'
      }`}
    >
      <nav className="w-full h-[200px] transition-all duration-300 py-4">
        <div
          className={`max-w-7xl mx-auto flex items-center transition-all duration-300 ${
            scrolled ? 'justify-center' : 'justify-between'
          }`}
        >
          {/* ⬇️ Wrapper with blurred background when scrolled */}
          <div
            className={`flex items-center rounded-2xl px-6 py-2 transition-all duration-300 ${
              scrolled
                ? 'bg-white/30 backdrop-blur-md shadow-md'
                : ''
            }`}
          >
            {/* Logo */}
            <img
              src="/hub.png"
              alt="Logo"
              className={`transition-all duration-300 ${
                scrolled ? 'w-[85px] h-[40px]' : 'w-[150px] h-[60px] mb-6'
              }`}
            />

            {/* Navigation */}
            <div
              className={`flex items-center space-x-6 text-amber-950 transition-all duration-300 ${
                scrolled ? 'ml-6 mt-2' : ''
              }`}
            >
              <ul className="flex space-x-6 text-amber-950 pb-3">
                <li>
                  <a href="/" className="hover:text-blue-500 font-bold">Home</a>
                </li>
                <li>
                  <a href="/Services" className="hover:text-blue-500 font-bold">Services</a>
                </li>
                <li>
                  <a href="/Explore Rooms" className="hover:text-blue-500 font-bold mr-8">Explore Rooms</a>
                </li>
              </ul>
              <div className="text-amber-950 w-[200px] h-[40px] font-medium text-center pt-2 rounded-4xl mb-3 bg-[#DDCDC1]">
                Get Free Estimate
              </div>
            </div>
          </div>
        </div>
      </nav>
    </div>
  );
}



//Corrected


'use client';
import { useEffect, useState } from "react";

export function NavBar() {
  const [scrolled, setScrolled] = useState(false);

  useEffect(() => {
    const onScroll = () => setScrolled(window.scrollY > 30);
    window.addEventListener("scroll", onScroll);
    return () => window.removeEventListener("scroll", onScroll);
  }, []);

  return (
    <div
      className={`fixed top-0 w-full z-50 transition-all duration-300 ${
        scrolled ? 'bg-transparent' : 'bg-[#F1F2F6]'
      }`}
    >
      <nav className="w-full h-[200px]  transition-all duration-300 py-4">
        <div
          className={`max-w-7xl mx-auto flex items-center transition-all duration-300 ${
            scrolled ? 'justify-center bg-white/30 backdrop-blur-md shadow-md w-[800px] rounded-2xl' : 'justify-between'
          }`}
        >
          {/* Logo */}
          <img
            src="/hub.png"
            alt="Logo"
            className={`transition-all duration-300 ${
              scrolled ? 'w-[85px] h-[40px]' : 'w-[150px] h-[60px] mb-6'
            }`}
          />

          {/* Navigation */}
          <div
            className={`flex items-center space-x-6 text-amber-950 transition-all duration-300 ${
              scrolled ? 'ml-8 mt-4 ' : '' 
            }`}
          >
            <ul className="flex space-x-6 text-amber-950 pb-3">
              <li><a href="/" className="hover:text-blue-500 font-bold">Home</a></li>
              <li><a href="/Services" className="hover:text-blue-500 font-bold">Services</a></li>
              <li><a href="/Explore Rooms" className="hover:text-blue-500 font-bold mr-8">Explore Rooms</a></li>
            </ul>
            <div className="text-amber-950 w-[200px] h-[40px] font-medium text-center pt-2 rounded-4xl mb-3 bg-[#DDCDC1]">
              Get Free Estimate
            </div>
          </div>
        </div>
      </nav>
    </div>
  );
}

//new

'use client';
import { useEffect, useState } from "react";

export function NavBar() {
  const [scrolled, setScrolled] = useState(false);

  useEffect(() => {
    const onScroll = () => setScrolled(window.scrollY > 30);
    window.addEventListener("scroll", onScroll);
    return () => window.removeEventListener("scroll", onScroll);
  }, []);

  return (
    <div
      className={`fixed top-0 w-full z-50 transition-all duration-300 ${
        scrolled ? 'bg-transparent' : 'bg-[#F1F2F6]'
      }`}
    >
      <nav className="w-full   transition-all duration-300 py-4">
        <div
          className={`max-w-7xl mx-auto flex items-center transition-all duration-300 ${
            scrolled ? 'justify-center bg-white/30 backdrop-blur-md shadow-md w-[800px] rounded-2xl' : 'justify-between'
          }`}
        >
          {/* Logo */}
          <img
            src="/hub.png"
            alt="Logo"
            className={`transition-all duration-300 ${
              scrolled ? 'w-[85px] h-[40px]' : 'w-[150px] h-[60px] mb-6'
            }`}
          />

          {/* Navigation */}
          <div
            className={`flex items-center space-x-6 text-amber-950 transition-all duration-300 ${
              scrolled ? 'ml-8 mt-4 ' : '' 
            }`}
          >
            <ul className="flex space-x-6 text-amber-950 pb-3">
              <li><a href="/" className="hover: font-bold text-[20px] gilda-display-regular">Home</a></li>
              <li><a href="/Services" className="hover:text-blue-500 text-[20px] font-bold gilda-display-regular">Services</a></li>
              <li><a href="/Explore Rooms" className="hover:text-blue-500 text-[20px] font-bold mr-8 gilda-display-regular">Explore Rooms</a></li>
            </ul>
            <div className="text-amber-950 w-[200px] h-[40px] font-bold text-center pt-2 rounded-4xl mb-3 bg-[#DDCDC1] gilda-display-regular">
              Get Free Estimate
            </div>
          </div>
        </div>
      </nav>
      <div className="text-4xl font-semibold text-amber-950 text-center tracking-wider pl-5 pt-10 gilda-display-regular" >Homes, Uniquely Built</div>
    </div>
  );
}


 <div className="text-4xl font-semibold text-amber-950 text-center tracking-wider pl-5 pt-10 gilda-display-regular" >Homes, Uniquely Built</div>


mix-blend-multiply 



export function Form(){
    return (
        <div className="h-[800px] mt-15 ml-20">
            <h1 className="text-4xl font-extrabold text-amber-950 tracking-wider gilda-display-regular ">The Features You Need, The Simplicity You Want</h1>
            <div className="flex h-[700px] mt-10">
                <div className="w-[400px] h-[500px]">
                        <h1 className="text-center mt-12 text-[18px] font-bold text-amber-950 gilda-display-regular">Living Room</h1>
                        <h1 className="text-center mt-15 text-[18px] font-bold text-amber-950 gilda-display-regular">Kitchen Room</h1>
                        <h1 className="text-center mt-15 text-[18px] font-bold text-amber-950 gilda-display-regular">BedRoom</h1>
                        <h1 className="text-center mt-15 text-[18px] font-bold text-amber-950 gilda-display-regular">Kids Room</h1>
                        <h1 className="text-center mt-15 text-[18px] font-bold text-amber-950 gilda-display-regular">Pooja Room</h1>
                </div>
                <div>
                <div className="w-full mr-30 ml-20 mt-10 flex">
                    <div className="w-[290px] h-[330px] bg-red-400 mr-10 rounded-3xl"></div>
                    <div className="w-[290px] h-[330px] bg-red-400 mr-10 rounded-3xl"></div>
                    <div className="w-[290px] h-[330px] bg-red-400 mr-10 rounded-3xl"></div>
                </div>
                <div className="w-full mr-30 ml-20 mt-10 flex">
                    <div className="w-[290px] h-[330px] bg-red-400 mr-10 rounded-3xl"></div>
                    <div className="w-[290px] h-[330px] bg-red-400 mr-10 rounded-3xl"></div>
                    <div className="w-[290px] h-[330px] bg-red-400 mr-10 rounded-3xl"></div>
                </div>
                </div>
                
            </div>
        </div>
    ) 
}


'use client';
import { useState } from 'react';

type RoomType = 'Living Room' | 'Kitchen Room' | 'BedRoom' | 'Kids Room' | 'Pooja Room';

interface RoomItem {
  color: string;
  image: string;
  title: string;
}

export function Form() {
  const [activeRoom, setActiveRoom] = useState<RoomType>('Living Room');
  
  // Room data with different images for each item
  const roomData: Record<RoomType, RoomItem[]> = {
    'Living Room': [
      { color: 'bg-red-400', image: '/living1.jpg', title: 'Modern Sofa Set' },
      { color: 'bg-red-400', image: '/living2.jpg', title: 'Entertainment Unit' },
      { color: 'bg-red-400', image: '/living3.jpg', title: 'Coffee Table' },
      { color: 'bg-red-400', image: '/living4.jpg', title: 'Bookshelf' },
      { color: 'bg-red-400', image: '/living5.jpg', title: 'Accent Chair' },
      { color: 'bg-red-400', image: '/living6.jpg', title: 'Console Table' }
    ],
    'Kitchen Room': [
      { color: 'bg-blue-400', image: '/kitchen1.jpg', title: 'Cabinet Set' },
      { color: 'bg-blue-400', image: '/kitchen2.jpg', title: 'Island Counter' },
      { color: 'bg-blue-400', image: '/kitchen3.jpg', title: 'Pantry' },
      { color: 'bg-blue-400', image: '/kitchen4.jpg', title: 'Breakfast Nook' },
      { color: 'bg-blue-400', image: '/kitchen5.jpg', title: 'Bar Stools' },
      { color: 'bg-blue-400', image: '/kitchen6.jpg', title: 'Backsplash' }
    ],
    'BedRoom': [
      { color: 'bg-green-400', image: '/bed1.jpg', title: 'Queen Bed' },
      { color: 'bg-green-400', image: '/bed2.jpg', title: 'Nightstand' },
      { color: 'bg-green-400', image: '/bed3.jpg', title: 'Dresser' },
      { color: 'bg-green-400', image: '/bed4.jpg', title: 'Wardrobe' },
      { color: 'bg-green-400', image: '/bed5.jpg', title: 'Vanity' },
      { color: 'bg-green-400', image: '/bed6.jpg', title: 'Reading Chair' }
    ],
    'Kids Room': [
      { color: 'bg-yellow-400', image: '/kids1.jpg', title: 'Bunk Bed' },
      { color: 'bg-yellow-400', image: '/kids2.jpg', title: 'Study Desk' },
      { color: 'bg-yellow-400', image: '/kids3.jpg', title: 'Toy Chest' },
      { color: 'bg-yellow-400', image: '/kids4.jpg', title: 'Bookcase' },
      { color: 'bg-yellow-400', image: '/kids5.jpg', title: 'Play Area' },
      { color: 'bg-yellow-400', image: '/kids6.jpg', title: 'Bean Bag' }
    ],
    'Pooja Room': [
      { color: 'bg-purple-400', image: '/pooja1.jpg', title: 'Mandir' },
      { color: 'bg-purple-400', image: '/pooja2.jpg', title: 'Puja Table' },
      { color: 'bg-purple-400', image: '/pooja3.jpg', title: 'Diya Stand' },
      { color: 'bg-purple-400', image: '/pooja4.jpg', title: 'Bell' },
      { color: 'bg-purple-400', image: '/pooja5.jpg', title: 'Incense Holder' },
      { color: 'bg-purple-400', image: '/pooja6.jpg', title: 'Holy Books Shelf' }
    ]
  };

  const roomTypes = Object.keys(roomData) as RoomType[];

  const renderRoomItems = (items: RoomItem[]) => {
    return items.map((item, index) => (
      <div 
        key={`${activeRoom}-${index}`}
        className={`w-[290px] h-[330px] ${item.color} mr-10 rounded-3xl overflow-hidden relative`}
      >
        <img 
          src={item.image} 
          alt={item.title}
          className="w-full h-full object-cover"
        />
        <div className="absolute bottom-0 left-0 right-0 bg-black bg-opacity-50 text-white p-4">
          <h3 className="font-bold">{item.title}</h3>
        </div>
      </div>
    ));
  };

  return (
    <div className="h-[800px] mt-15 ml-20">
      <h1 className="text-4xl font-extrabold text-amber-950 tracking-wider gilda-display-regular">
        The Features You Need, The Simplicity You Want
      </h1>
      
      <div className="flex h-[700px] mt-10">
        {/* Room Selection Sidebar */}
        <div className="w-[400px] h-[500px]">
          {roomTypes.map((room) => (
            <h1 
              key={room}
              onClick={() => setActiveRoom(room)}
              className={`text-center mt-12 text-[18px] font-bold cursor-pointer gilda-display-regular 
                ${activeRoom === room ? 'text-amber-700 underline' : 'text-amber-950'}`}
            >
              {room}
            </h1>
          ))}
        </div>

        {/* Room Content Display */}
        <div className="flex-1">
          {/* First row of 3 divs */}
          <div className="w-full mr-30 ml-20 mt-10 flex">
            {renderRoomItems(roomData[activeRoom].slice(0, 3))}
          </div>
          
          {/* Second row of 3 divs */}
          <div className="w-full mr-30 ml-20 mt-10 flex">
            {renderRoomItems(roomData[activeRoom].slice(3, 6))}
          </div>
        </div>
      </div>
    </div>
  );
}



'use client';
import { useState } from 'react';

type RoomType = 'Living Room' | 'Kitchen Room' | 'BedRoom' | 'Kids Room' | 'Pooja Room';

interface RoomItem {
  image: string;
}

export function Form() {
  const [activeRoom, setActiveRoom] = useState<RoomType>('Living Room');
  
  // Room data with only images
  const roomData: Record<RoomType, RoomItem[]> = {
    'Living Room': [
      { image: '/living1.jpg' },
      { image: '/living2.jpg' },
      { image: '/living3.jpg' },
      { image: '/living4.jpg' },
      { image: '/living5.jpg' },
      { image: '/living6.jpg' }
    ],
    'Kitchen Room': [
      { image: '/kitchen1.jpg' },
      { image: '/kitchen2.jpg' },
      { image: '/kitchen3.jpg' },
      { image: '/kitchen4.jpg' },
      { image: '/kitchen5.jpg' },
      { image: '/kitchen6.jpg' }
    ],
    'BedRoom': [
      { image: '/bed1.jpg' },
      { image: '/bed2.jpg' },
      { image: '/bed3.jpg' },
      { image: '/bed4.jpg' },
      { image: '/bed5.jpg' },
      { image: '/bed6.jpg' }
    ],
    'Kids Room': [
      { image: '/kids1.jpg' },
      { image: '/kids2.jpg' },
      { image: '/kids3.jpg' },
      { image: '/kids4.jpg' },
      { image: '/kids5.jpg' },
      { image: '/kids6.jpg' }
    ],
    'Pooja Room': [
      { image: '/pooja1.jpg' },
      { image: '/pooja2.jpg' },
      { image: '/pooja3.jpg' },
      { image: '/pooja4.jpg' },
      { image: '/pooja5.jpg' },
      { image: '/pooja6.jpg' }
    ]
  };

  const roomTypes = Object.keys(roomData) as RoomType[];

  return (
    <div className="h-[800px] mt-15 ml-20">
      <h1 className="text-4xl font-extrabold text-amber-950 tracking-wider gilda-display-regular">
        The Features You Need, The Simplicity You Want
      </h1>
      
      <div className="flex h-[700px] mt-10">
        {/* Room Selection Sidebar */}
        <div className="w-[400px] h-[500px]">
          {roomTypes.map((room) => (
            <h1 
              key={room}
              onClick={() => setActiveRoom(room)}
              className={`text-center mt-12 text-[18px] font-bold cursor-pointer gilda-display-regular 
                ${activeRoom === room ? 'text-amber-700 underline' : 'text-amber-950'}`}
            >
              {room}
            </h1>
          ))}
        </div>

        {/* Room Content Display - Pure Images Only */}
        <div className="flex-1">
          {/* First row of 3 images */}
          <div className="w-full mr-30 ml-20 mt-10 flex">
            {roomData[activeRoom].slice(0, 3).map((item, index) => (
              <div 
                key={`${activeRoom}-${index}`}
                className="w-[290px] h-[330px] mr-10 rounded-3xl overflow-hidden"
              >
                <img 
                  src={item.image} 
                  alt="" 
                  className="w-full h-full object-cover"
                />
              </div>
            ))}
          </div>
          
          {/* Second row of 3 images */}
          <div className="w-full mr-30 ml-20 mt-10 flex">
            {roomData[activeRoom].slice(3, 6).map((item, index) => (
              <div 
                key={`${activeRoom}-${index+3}`}
                className="w-[290px] h-[330px] mr-10 rounded-3xl overflow-hidden"
              >
                <img 
                  src={item.image} 
                  alt="" 
                  className="w-full h-full object-cover"
                />
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
}

////////////////

export function CxSection(){

    return (
        <div className="h-[700px]"> 
         
        <h1 className="mt-10 text-center text-4xl gilda-display-regular text-amber-950 "> Testimonials </h1>

        <div className="w-[900px] h-[550px] bg-red-400 mt-10 ml-75 rounded-4xl"> 

        <video
            src="DemoVideo.mp4"
            style={{ width: '100%', height: '100%', objectFit: 'cover', borderRadius: '1rem' }}
            autoPlay
            muted
            loop
            playsInline
        />

        </div>
        
        </div>
    )

}


//////////



'use client';
import { useState, useEffect } from 'react';

export function CxSection() {
  const videos = [
    { src: '/DemoVideo.mp4',  title: 'Product Showcase 1' },
    { src: '/DemoVideo2.mp4', title: 'Product Showcase 2' },
    { src: '/DemoVideo.mp4', title: 'Product Showcase 3' },
    { src: '/DemoVideo2.mp4', title: 'Product Showcase 3' }
  ];

  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentVideoIndex((prev) => (prev + 1) % videos.length);
    }, 8000);
    return () => clearInterval(interval);
  }, [videos.length]);

  return (
    <div className="h-[800px] flex flex-col items-center bg-[#F1F2F6] py-16">
      {/* Header with decorative elements */}
      <div className="text-center mb-12">
        <h1 className="text-5xl font-light gilda-display-regular text-amber-950 mb-4">
            Testimonials
        </h1>
        <div className="w-24 h-1 bg-amber-700 mx-auto"></div>
      </div>

      {/* Video Carousel Container */}
      <div className="relative w-[85%] max-w-[1200px] h-[500px] rounded-3xl overflow-hidden shadow-2xl">
        {/* Video with overlay */}
        <div className="relative w-full h-full">
          <video
            key={videos[currentVideoIndex].src}
            src={videos[currentVideoIndex].src}
            className="w-full h-full object-cover"
            autoPlay
            muted
            loop
            playsInline
          />
        </div>

        {/* Navigation indicators */}
        <div className="absolute bottom-4 right-4 flex gap-4">
          {videos.map((_, index) => (
            <button
              key={index}
              onClick={() => setCurrentVideoIndex(index)}
              className={`w-3 h-3 rounded-full transition-all ${currentVideoIndex === index ? 'bg-white w-6' : 'bg-white/50'}`}
            />
          ))}
        </div>
      </div>
    </div>
  );
}





///////


'use client';
import { useState, useEffect, useRef } from 'react';

export function CxSection() {
  const videos = [
    { src: '/DemoVideo.mp4', title: 'Testimonial 1', audio: true },
    { src: '/DemoVideo2.mp4', title: 'Testimonial 2', audio: false },
    { src: '/DemoAV.mp4', title: 'Testimonial 3', audio: true },
    { src: '/DemoVideo2.mp4', title: 'Testimonial 4', audio: false }
  ];

  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);
  const videoRefs = useRef<(HTMLVideoElement | null)[]>([]);

  // Always show 3 videos (current, next, previous)
  const visibleVideos = [
    videos[(currentVideoIndex - 1 + videos.length) % videos.length],
    videos[currentVideoIndex],
    videos[(currentVideoIndex + 1) % videos.length]
  ];

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentVideoIndex((prev) => (prev + 1) % videos.length);
    }, 8000);
    return () => clearInterval(interval);
  }, [videos.length]);

  // Handle audio management
  const handleVideoClick = (index: number) => {
    videoRefs.current.forEach((video, i) => {
      if (video) {
        // Mute all videos first
        video.muted = true;
        // Unmute only if this video has audio enabled
        if (i === index && videos[(currentVideoIndex + index - 1) % videos.length].audio) {
          video.muted = false;
        }
      }
    });
    setCurrentVideoIndex((currentVideoIndex + index - 1) % videos.length);
  };

  return (
    <div className="h-[800px] flex flex-col items-center bg-[#F1F2F6] py-16">
      <div className="text-center mb-12">
        <h1 className="text-5xl font-light gilda-display-regular text-amber-950 mb-4">
          Testimonials
        </h1>
      </div>

      {/* Triple Video Carousel */}
      <div className="relative w-[90%] max-w-[1400px] h-[500px] flex gap-6">
        {visibleVideos.map((video, index) => (
          <div 
            key={`${video.src}-${index}`}
            className={`relative flex-1 rounded-lg overflow-hidden shadow-2xl transition-all duration-500 ${
              index === 1 ? 'z-10 scale-105' : 'z-0 scale-95 opacity-90'
            }`}
            onClick={() => handleVideoClick(index)}
          >
            <video
              ref={(el : any) => (videoRefs.current[index] = el)}
              src={video.src}
              className="w-full h-full object-cover cursor-pointer"
              autoPlay
              muted={index !== 1 || !video.audio}
              loop
              playsInline
            />
            {index === 1 && video.audio && (
              <div className="absolute top-4 right-4 bg-black/50 text-white p-2 rounded-full">
                🔊
              </div>
            )}
          </div>
        ))}
      </div>

      {/* Navigation indicators */}
      <div className="flex gap-4 mt-8">
        {videos.map((_, index) => (
          <button
            key={index}
            onClick={() => {
              setCurrentVideoIndex(index);
            }}
            className={`w-3 h-3 rounded-full transition-all ${
              currentVideoIndex === index ? 'bg-[#DDCDC1] w-6' : 'bg-gray-400'
            }`}
          />
        ))}
      </div>
    </div>
  );
}






export function Featurespro(){
    return (
        <div className="h-[800px]">
            <h1 className="text-4xl ml-25 gilda-display-regular mt-10 text-amber-950">Why Choose HUB Interiors ?</h1>
            <div className="flex m-12">
            <div className=" border-2 border-red-300 w-[600px] h-[280px]  ml-30 rounded-4xl"></div>
            <div className=" border-2 border-red-300 w-[600px] h-[280px]  ml-10 rounded-4xl"></div>
            </div>
            <div className="flex">
            <div className="border-2 border-red-300 w-[600px] h-[280px]  ml-42 rounded-4xl"></div>
            <div className="border-2 border-red-300 w-[600px] h-[280px]  ml-10 rounded-4xl"></div>
            </div>
            
        </div>
    )
}



export function QAsection(){
    return (
        <div className="h-[800px] ">

            <div className="text-4xl mt-8 ml-25 gilda-display-regular text-amber-950">Frequently Asked Questions</div>

        </div>
    )
}


'use client'
import Link from 'next/link';
import { useEffect, useState, useRef } from 'react';



<div>
            <h3 className="text-sm font-bold mb-4 text-[#2B1D14]">AI SUITE</h3>
            <ul className="space-y-2 text-sm text-[#3B2F2F]">
              <li>AI Assistant</li>
              <li>AI Image Generator</li>
              <li>AI Video Generator</li>
              <li>AI Voice Generator</li>
              <li>All Freepik tools</li>
            </ul>
          </div>


          <div>
            <h3 className="text-sm font-bold mb-4 text-[#2B1D14]">INFORMATION</h3>
            <ul className="space-y-2 text-sm text-[#4A3F35]">
              <li>Pricing</li>
              <li>About us</li>
              <li>API</li>
              <li>Jobs</li>
              <li>Sell content</li>
              <li>Brand guidelines</li>
              <li>Events</li>
              <li>Search trends</li>
              <li>Blog</li>
            </ul>
          </div>


                      <h3 className="text-sm font-bold mb-4 text-[#2B1D14]">LEGAL</h3>
            <ul className="space-y-2 text-sm text-[#4A3F35] mb-6">
              <li>Terms of use</li>
              <li>License agreement</li>
              <li>Privacy policy</li>
              <li>Copyright information</li>
              <li>Cookies policy</li>
              <li>Cookies Settings</li>
            </ul>